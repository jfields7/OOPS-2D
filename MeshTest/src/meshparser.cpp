#include <meshparser.h>
#include <iostream>

using namespace std;

// DO NOT MODIFY - This file is automatically generated during compilation.

void MeshParser::updateParameters(string fname, Parameters* params){
  if(!checkId(params)){
    return;
  }
  reader.clearData();
  ParamReader::ParamResult result = reader.readFile(fname);
  if(result != ParamReader::SUCCESS){
    cout << "An error occurred while trying to read " << fname << ".\n";
    return;
  }
  MeshParameters *pars = (MeshParameters*) params;

  if(!reader.hasSection(string("Mesh"))){
    return;
  }

  if(reader.hasParameter(string("Mesh"),string("DomainMinX"))){
    double result = reader.readAsDouble(string("Mesh"),string("DomainMinX"));
    if(result <= 1.000000e+06 && result >= -1.000000e+06){
      pars->setDomainMinX(result);
    }
    else{
      cout << "Parameter DomainMinX out of range.\n";
    }
  }

  if(reader.hasParameter(string("Mesh"),string("DomainMaxX"))){
    double result = reader.readAsDouble(string("Mesh"),string("DomainMaxX"));
    if(result <= 1.000000e+06 && result >= -1.000000e+06){
      pars->setDomainMaxX(result);
    }
    else{
      cout << "Parameter DomainMaxX out of range.\n";
    }
  }

  if(reader.hasParameter(string("Mesh"),string("DomainMinY"))){
    double result = reader.readAsDouble(string("Mesh"),string("DomainMinY"));
    if(result <= 1.000000e+06 && result >= -1.000000e+06){
      pars->setDomainMinY(result);
    }
    else{
      cout << "Parameter DomainMinY out of range.\n";
    }
  }

  if(reader.hasParameter(string("Mesh"),string("DomainMaxY"))){
    double result = reader.readAsDouble(string("Mesh"),string("DomainMaxY"));
    if(result <= 1.000000e+06 && result >= -1.000000e+06){
      pars->setDomainMaxY(result);
    }
    else{
      cout << "Parameter DomainMaxY out of range.\n";
    }
  }

  if(reader.hasParameter(string("Mesh"),string("GridPointsX"))){
    int result = reader.readAsInt(string("Mesh"),string("GridPointsX"));
    if(result <= 128000 && result >= 7){
      pars->setGridPointsX(result);
    }
    else{
      cout << "Parameter GridPointsX out of range.\n";
    }
  }

  if(reader.hasParameter(string("Mesh"),string("GridPointsY"))){
    int result = reader.readAsInt(string("Mesh"),string("GridPointsY"));
    if(result <= 128000 && result >= 7){
      pars->setGridPointsY(result);
    }
    else{
      cout << "Parameter GridPointsY out of range.\n";
    }
  }

}

